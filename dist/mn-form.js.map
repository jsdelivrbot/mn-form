{"version":3,"sources":["scripts/mn-form.class.js"],"names":["MnForm","self","_this","_ret","_classCallCheck","this","setForm","_possibleConstructorReturn","validate","event","preventDefault","form","classList","add","putInForm","element","appendChild","getNameAndValue","attr","name","value","setAttribute","attribute","attributeSpec","attributeSpecs","filter","spec","isDefaultAttribute","hasOwnProperty","attributeValue","isValidValue","values","indexOf","default","_this2","remove","document","createElement","addEventListener","attributes","Array","from","map","defaultAttibutes","defaultAttr","some","concat","instanceIndex","querySelectorAll","defaultFormName","getAttribute","forEach","removeAttribute","children","cssClass","insertBefore","firstChild","HTMLElement","window","customElements","define"],"mappings":"sxCAAMA,OAAAA,SAAAA,cACJ,QAAAA,QAAYC,MAAM,GAAAC,OAAAC,IAGhB,OAHgBC,iBAAAC,KAAAL,QAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,OAAAA,WAAAA,OAAAA,eAAAA,SAAAA,KAAAA,KAAaA,OACbC,MAAKI,UACLH,KAAOF,KAAPM,2BAAAL,MAAAC,iGAoCA,QAASK,UAASC,OAChBA,MAAMC,iBACNC,KAAKC,UAAUC,IAAI,aAuCrB,QAASC,WAAUC,SACjBJ,KAAKK,YAAYD,SAKnB,QAASE,iBAAgBC,MACvB,GAAIC,MAAOD,KAAKC,KACZC,MAAQF,KAAKE,KACjB,QAAQD,KAAAA,KAAMC,MAAAA,OAGhB,QAASC,cAAaC,WACpB,GAAIC,eAAgBC,eAAeC,OAAO,SAAAC,MAAA,MAAQA,MAAKP,OAASG,UAAUH,OAAM,EAChF,KAAKI,cACH,OAAO,CAET,IAAII,oBAAqBJ,cAAcK,eAAe,WAClDC,eAAiBP,UAAUF,KAE/B,IAAIO,mBAAoB,CACtB,GAAIG,cAAeP,cAAcK,eAAe,WAC3CL,cAAcQ,OAAOC,QAAQH,iBAAmB,EAEjDT,MAAQU,aACRD,eACAN,cAAcU,OAElBtB,MAAKU,aAAaC,UAAUH,KAAMC,WACzBS,iBACTlB,KAAKU,aAAaC,UAAUH,KAAMU,gBAxG9B,GAAAK,QAAA7B,KACJmB,iBAEAL,KAAM,aACNc,QAAS,QACTF,QACE,OACA,WAIFZ,KAAM,SAGNA,KAAM,aACNc,QAAS,SAGTd,KAAM,aAGNA,KAAM,mBAGNA,KAAM,KACNgB,QAAQ,IAIRxB,KAAOyB,SAASC,cAAc,OAElC1B,MAAK2B,iBAAiB,SAAU9B,SAOhC,IAAI+B,YAAaC,MACdC,KAAKpC,KAAKkC,YACVG,IAAIzB,iBAEH0B,iBAAmBnB,eACpBC,OAAO,SAAAP,MAAA,MAAQA,MAAKU,eAAe,aACnCH,OAAO,SAAAmB,aAAA,OAAgBL,WAAWM,KAAK,SAAAvB,WAAA,MAAaA,WAAUH,OAASyB,YAAYzB,QAEtFoB,YAAaA,WAAWO,OAAOH,iBAE/B,IAAMI,eAAgBP,MAAMC,KAAKL,SAASY,iBAAiB,YAAYhB,QAAQ3B,MACzE4C,gBAAAA,QAAyBF,cAAgB,EAAIA,cAAgB,GACnEpC,MAAKU,aAAa,OAAQhB,KAAK6C,aAAa,SAAWD,iBAEvDV,WAAWY,QAAQ9B,cAEnBG,eACGC,OAAO,SAAAP,MAAA,MAAQA,MAAKiB,SACpBgB,QAAQ,SAAAjC,MACPgB,OAAKkB,gBAAgBlC,KAAKC,QAG9BqB,MACGC,KAAKpC,KAAKgD,UACVF,QAAQrC,WAEX0B,MACGC,KAAKpC,KAAKO,WACVuC,QAAQ,SAAAG,UACPpB,OAAKtB,UAAUuB,OAAOmB,UACtB3C,KAAKC,UAAUC,IAAIyC,YAGvBjD,KAAK+C,gBAAgB,SACrB/C,KAAK+C,gBAAgB,QAMrB/C,KAAKkD,aAAa5C,KAAMN,KAAKmD,wBArFZC,YAqHrBC,QAAOC,eAAeC,OAAO,UAAW5D","file":"mn-form.js","sourcesContent":["class MnForm extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.setForm()\n    return self\n  }\n\n  setForm() {\n    let attributeSpecs = [\n      {\n        name: 'spellcheck',\n        default: 'false',\n        values: [\n          'true',\n          'false',\n        ],\n      },\n      {\n        name: 'name',\n      },\n      {\n        name: 'novalidate',\n        default: 'true',\n      },\n      {\n        name: 'disabled',\n      },\n      {\n        name: 'autocapitalize',\n      },\n      {\n        name: 'id',\n        remove: true,\n      },\n    ]\n\n    let form = document.createElement('form')\n\n    form.addEventListener('submit', validate)\n\n    function validate(event) {\n      event.preventDefault()\n      form.classList.add('submitted')\n    }\n\n    let attributes = Array\n      .from(this.attributes)\n      .map(getNameAndValue)\n\n    let defaultAttibutes = attributeSpecs\n      .filter(attr => attr.hasOwnProperty('default'))\n      .filter(defaultAttr => !attributes.some(attribute => attribute.name === defaultAttr.name)) // not implemented\n\n    attributes = attributes.concat(defaultAttibutes)\n\n    const instanceIndex = Array.from(document.querySelectorAll('mn-form')).indexOf(this)\n    const defaultFormName = `form${instanceIndex > 0 ? instanceIndex : ''}`\n    form.setAttribute('name', this.getAttribute('name') || defaultFormName)\n\n    attributes.forEach(setAttribute)\n\n    attributeSpecs\n      .filter(attr => attr.remove)\n      .forEach(attr => {\n        this.removeAttribute(attr.name)\n      })\n\n    Array\n      .from(this.children)\n      .forEach(putInForm)\n\n    Array\n      .from(this.classList)\n      .forEach(cssClass => {\n        this.classList.remove(cssClass)\n        form.classList.add(cssClass)\n      })\n\n    this.removeAttribute('class')\n    this.removeAttribute('name')\n\n    function putInForm(element) {\n      form.appendChild(element)\n    }\n\n    this.insertBefore(form, this.firstChild)\n\n    function getNameAndValue(attr) {\n      let name = attr.name\n      let value = attr.value\n      return {name, value}\n    }\n\n    function setAttribute(attribute) {\n      let attributeSpec = attributeSpecs.filter(spec => spec.name === attribute.name)[0]\n      if (!attributeSpec) {\n        return false\n      }\n      let isDefaultAttribute = attributeSpec.hasOwnProperty('default')\n      let attributeValue = attribute.value\n\n      if (isDefaultAttribute) {\n        let isValidValue = attributeSpec.hasOwnProperty('values')\n          && attributeSpec.values.indexOf(attributeValue) >= 0\n\n        let value = isValidValue\n          ? attributeValue\n          : attributeSpec.default\n\n        form.setAttribute(attribute.name, value)\n      } else if (attributeValue) {\n        form.setAttribute(attribute.name, attributeValue)\n      }\n    }\n  }\n}\n\nwindow.customElements.define('mn-form', MnForm)\n"]}