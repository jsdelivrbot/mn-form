{"version":3,"sources":["scripts/mn-form.class.js"],"names":["MnForm","self","submit","event","preventDefault","form","classList","add","inputs","querySelectorAll","Array","from","forEach","input","validate","formIsValid","length","parentNode","onSubmit","console","error","getNameAndValue","attr","name","value","setAttribute","attribute","attributeSpec","attributeSpecs","filter","spec","isDefaultAttribute","hasOwnProperty","attributeValue","isValidValue","values","indexOf","default","_this","_ret","_classCallCheck","this","remove","document","createElement","addEventListener","attributes","map","defaultAttibutes","defaultAttr","some","instanceIndex","defaultFormName","getAttribute","concat","removeAttribute","children","element","appendChild","cssClass","insertBefore","firstChild","_possibleConstructorReturn","querySelector","checkValidity","HTMLElement","window","customElements","define"],"mappings":"sxCAAMA,OAAAA,SAAAA,cACJ,QAAAA,QAAYC,MAoCV,QAASC,QAAOC,OACdA,MAAMC,iBACNC,KAAKC,UAAUC,IAAI,YACnB,IAAMC,QAASH,KAAKI,iBAAiB,YAErCC,OACGC,KAAKH,QACLI,QAAQ,SAAAC,OAAA,MAASA,OAAMC,YAG1B,IAAMC,aAAoE,IAAtDV,KAAKI,iBAAiB,qBAAqBO,MAC/D,QAAID,kBAIoC,kBAA7BV,MAAKY,WAAWC,SACzBb,KAAKY,WAAWC,SAASf,OAEzBgB,QAAQC,MAAM,gDAyClB,QAASC,iBAAgBC,MACvB,GAAMC,MAAOD,KAAKC,KACZC,MAAQF,KAAKE,KACnB,QAAQD,KAAAA,KAAMC,MAAAA,OAGhB,QAASC,cAAaC,WACpB,GAAMC,eAAgBC,eAAeC,OAAO,SAAAC,MAAA,MAAQA,MAAKP,OAASG,UAAUH,OAAM,EAClF,KAAKI,cACH,OAAO,CAET,IAAMI,oBAAqBJ,cAAcK,eAAe,WAClDC,eAAiBP,UAAUF,KAEjC,IAAIO,mBAAoB,CACtB,GAAMG,cAAeP,cAAcK,eAAe,WAC7CL,cAAcQ,OAAOC,QAAQH,iBAAmB,EAE/CT,MAAQU,aACVD,eACAN,cAAcU,OAElBhC,MAAKoB,aAAaC,UAAUH,KAAMC,WACzBS,iBACT5B,KAAKoB,aAAaC,UAAUH,KAAMU,gBAvHtB,GAAAK,OAAAC,IAAAC,iBAAAC,KAAAzC,QAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,OAAAA,WAAAA,OAAAA,eAAAA,SAAAA,KAAAA,KAAaA,MAGb,IAAM2B,kBAEFL,KAAM,aACNc,QAAS,QACTF,QACE,OACA,WAIFZ,KAAM,SAGNA,KAAM,aACNc,QAAS,SAGTd,KAAM,aAGNA,KAAM,mBAGNA,KAAM,KACNmB,QAAQ,IAINrC,KAAOsC,SAASC,cAAc,OAEpCvC,MAAKwC,iBAAiB,SAAU3C,OAwBhC,IAAM4C,YAAapC,MAChBC,KAAK2B,MAAKQ,YACVC,IAAI1B,iBAED2B,iBAAmBpB,eACtBC,OAAO,SAAAP,MAAA,MAAQA,MAAKU,eAAe,aACnCH,OAAO,SAAAoB,aAAA,OAAgBH,WAAWI,KAAK,SAAAxB,WAAA,MAAaA,WAAUH,OAAS0B,YAAY1B,SAEhF4B,cAAgBzC,MAAMC,KAAKgC,SAASlC,iBAAiB,YAAY2B,QAAjDE,OAChBc,gBAAAA,OAAyBD,aAuD/B,OArDA9C,MAAKoB,aAAa,OAAQa,MAAKe,aAAa,SAAWD,iBAEvDN,WAAWQ,OAAON,kBAAkBpC,QAAQa,cAE5CG,eACGC,OAAO,SAAAP,MAAA,MAAQA,MAAKoB,SACpB9B,QAAQ,SAAAU,MACPgB,MAAKiB,gBAAgBjC,KAAKC,QAG9Bb,MACGC,KAAK2B,MAAKkB,UACV5C,QAAQ,SAAA6C,SAAA,MAAWpD,MAAKqD,YAAYD,WAEvC/C,MACGC,KAAK2B,MAAKhC,WACVM,QAAQ,SAAA+C,UACPrB,MAAKhC,UAAUoC,OAAOiB,UACtBtD,KAAKC,UAAUC,IAAIoD,YAGvBrB,MAAKiB,gBAAgB,SACrBjB,MAAKiB,gBAAgB,QAErBjB,MAAKsB,aAAavD,KAAMiC,MAAKuB,YA6B7BtB,KAAOtC,KAAP6D,2BAAAxB,MAAAC,uGAIA,GAAMlC,MAAOoC,KAAKsB,cAAc,OAChC,OAAO1D,MAAK2D,4BAhIKC,YAoIrBC,QAAOC,eAAeC,OAAO,UAAWpE","file":"mn-form.js","sourcesContent":["class MnForm extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n\n    // set form\n    const attributeSpecs = [\n      {\n        name: 'spellcheck',\n        default: 'false',\n        values: [\n          'true',\n          'false',\n        ],\n      },\n      {\n        name: 'name',\n      },\n      {\n        name: 'novalidate',\n        default: 'true',\n      },\n      {\n        name: 'disabled',\n      },\n      {\n        name: 'autocapitalize',\n      },\n      {\n        name: 'id',\n        remove: true,\n      },\n    ]\n\n    const form = document.createElement('form')\n\n    form.addEventListener('submit', submit)\n\n    function submit(event) {\n      event.preventDefault()\n      form.classList.add('submitted')\n      const inputs = form.querySelectorAll('.mn-input')\n\n      Array\n        .from(inputs)\n        .forEach(input => input.validate())\n\n      // if (!form.checkValidity()) {\n      const formIsValid = form.querySelectorAll('.mn-input.invalid').length === 0\n      if (formIsValid) {\n        return false\n      }\n\n      if (typeof form.parentNode.onSubmit === 'function') {\n        form.parentNode.onSubmit(event)\n      } else {\n        console.error('you need set a callback function to mn-form')\n      }\n    }\n\n    const attributes = Array\n      .from(this.attributes)\n      .map(getNameAndValue)\n\n    const defaultAttibutes = attributeSpecs\n      .filter(attr => attr.hasOwnProperty('default'))\n      .filter(defaultAttr => !attributes.some(attribute => attribute.name === defaultAttr.name)) // not implemented\n\n    const instanceIndex = Array.from(document.querySelectorAll('mn-form')).indexOf(this)\n    const defaultFormName = `form${instanceIndex}`\n\n    form.setAttribute('name', this.getAttribute('name') || defaultFormName)\n\n    attributes.concat(defaultAttibutes).forEach(setAttribute)\n\n    attributeSpecs\n      .filter(attr => attr.remove)\n      .forEach(attr => {\n        this.removeAttribute(attr.name)\n      })\n\n    Array\n      .from(this.children)\n      .forEach(element => form.appendChild(element))\n\n    Array\n      .from(this.classList)\n      .forEach(cssClass => {\n        this.classList.remove(cssClass)\n        form.classList.add(cssClass)\n      })\n\n    this.removeAttribute('class')\n    this.removeAttribute('name')\n\n    this.insertBefore(form, this.firstChild)\n\n    function getNameAndValue(attr) {\n      const name = attr.name\n      const value = attr.value\n      return {name, value}\n    }\n\n    function setAttribute(attribute) {\n      const attributeSpec = attributeSpecs.filter(spec => spec.name === attribute.name)[0]\n      if (!attributeSpec) {\n        return false\n      }\n      const isDefaultAttribute = attributeSpec.hasOwnProperty('default')\n      const attributeValue = attribute.value\n\n      if (isDefaultAttribute) {\n        const isValidValue = attributeSpec.hasOwnProperty('values')\n          && attributeSpec.values.indexOf(attributeValue) >= 0\n\n        const value = isValidValue\n          ? attributeValue\n          : attributeSpec.default\n\n        form.setAttribute(attribute.name, value)\n      } else if (attributeValue) {\n        form.setAttribute(attribute.name, attributeValue)\n      }\n    }\n    return self\n  }\n\n  checkValidity() {\n    const form = this.querySelector('form')\n    return form.checkValidity()\n  }\n}\n\nwindow.customElements.define('mn-form', MnForm)\n"]}